cm_1800748_chan1 = [ ...
    34, 16, 14, 0, 6; ...
    9, 28, 3, 0, 30; ...
    4, 21, 16, 13, 16; ...
    2, 0, 4, 62, 2; ...
    2, 21, 6, 2, 39 ...
];

cm_1800748_chan2 = [ ...
    45, 20, 1, 0, 4; ...
    6, 23, 6, 0, 35; ...
    2, 5, 55, 5, 3; ...
    4, 0, 1, 65, 0; ...
    4, 10, 5, 0, 51 ...
];

cm_1800748_chan3 = [ ...
    48, 11, 0, 0, 11; ...
    7, 28, 7, 0, 28; ...
    1, 6, 40, 7, 16; ...
    2, 3, 9, 56, 0; ...
    11, 26, 10, 0, 23 ...
];

cm_1800752_chan1 = [ ...
    44, 35, 0, 0, 1; ...
    8, 63, 6, 0, 3; ...
    4, 7, 33, 13, 23; ...
    0, 0, 19, 30, 31; ...
    20, 35, 16, 1, 8 ...
];

cm_1800752_chan2 = [ ...
    43, 34, 1, 1, 1; ...
    6, 67, 2, 2, 3; ...
    1, 2, 49, 15, 13; ...
    1, 0, 13, 42, 24; ...
    14, 56, 9, 1, 0 ...
];

cm_1800752_chan3 = [ ...
    42, 34, 2, 0, 2; ...
    7, 59, 4, 2, 8; ...
    2, 12, 28, 14, 24; ...
    0, 0, 30, 31, 19; ...
    15, 32, 8, 0, 25 ...
];

cm_1800870_chan1 = [ ...
    25, 9, 30, 1, 15; ...
    6, 30, 5, 0, 39; ...
    7, 15, 12, 8, 38; ...
    0, 3, 5, 63, 9; ...
    0, 19, 1, 2, 58 ...
];

cm_1800870_chan2 = [ ...
    42, 27, 0, 0, 11; ...
    6, 2, 1, 0, 71; ...
    20, 8, 29, 5, 18; ...
    2, 0, 21, 57, 0; ...
    0, 3, 4, 0, 73 ...
];

cm_1800870_chan3 = [ ...
    43, 14, 11, 0, 12; ...
    8, 37, 6, 0, 29; ...
    15, 16, 20, 8, 21; ...
    0, 1, 6, 68, 5; ...
    0, 31, 8, 1, 40 ...
];

cm_1800439_chan1 = [ ...
    35, 11, 14, 0, 5; ...
    8, 11, 23, 0, 23; ...
    7, 16, 26, 3, 13; ...
    1, 12, 4, 47, 1; ...
    8, 10, 12, 0, 35 ...
];

cm_1800439_chan2 = [ ...
    26, 28, 1, 0, 10; ...
    12, 25, 2, 0, 26; ...
    5, 4, 33, 4, 19; ...
    3, 1, 1, 56, 4; ...
    10, 16, 4, 0, 35 ...
];

cm_1800439_chan3 = [ ...
    34, 15, 0, 0, 16; ...
    9, 36, 4, 0, 16; ...
    7, 3, 36, 2, 17; ...
    4, 0, 0, 58, 3; ...
    12, 15, 3, 0, 35 ...
];

cm_1800596_chan1 = [ ...
    33, 22, 4, 0, 11; ...
    7, 23, 3, 2, 35; ...
    4, 8, 14, 17, 27; ...
    1, 2, 31, 33, 3; ...
    4, 10, 0, 1, 55 ...
];

cm_1800596_chan2 = [ ...
    42, 19, 4, 1, 4; ...
    9, 49, 3, 1, 8; ...
    4, 9, 17, 17, 23; ...
    0, 0, 31, 32, 7; ...
    5, 34, 7, 0, 24 ...
];

cm_1800596_chan3 = [ ...
    40, 20, 9, 1, 0; ...
    14, 48, 1, 0, 7; ...
    3, 6, 29, 28, 4; ...
    1, 1, 35, 32, 1; ...
    3, 0, 0, 0, 67 ...
];

cm_1800604_chan1 = [ ...
    33, 22, 0, 0, 10; ...
    4, 50, 3, 1, 7; ...
    0, 7, 50, 5, 3; ...
    1, 0, 7, 56, 1; ...
    4, 28, 5, 1, 27 ...
];

cm_1800604_chan2 = [ ...
    37, 20, 0, 1, 7; ...
    4, 48, 4, 0, 9; ...
    2, 4, 51, 5, 3; ...
    1, 0, 7, 56, 1; ...
    1, 36, 8, 0, 20 ...
];

cm_1800604_chan3 = [ ...
    39, 16, 0, 0, 10; ...
    1, 50, 4, 0, 10; ...
    4, 2, 38, 19, 2; ...
    1, 0, 11, 53, 0; ...
    1, 12, 4, 1, 47 ...
];

cm_1800458_chan1 = [ ...
    38, 11, 11, 0, 25; ...
    6, 65, 6, 1, 7; ...
    2, 22, 46, 7, 8; ...
    0, 0, 1, 84, 0; ...
    3, 53, 16, 0, 13 ...
];

cm_1800458_chan2 = [ ...
    63, 7, 1, 0, 14; ...
    2, 55, 1, 0, 27; ...
    2, 11, 55, 5, 12; ...
    1, 0, 0, 84, 0; ...
    1, 33, 2, 0, 49 ...
];

cm_1800458_chan3 = [ ...
    57, 17, 2, 0, 9; ...
    7, 61, 0, 0, 17; ...
    3, 15, 44, 5, 18; ...
    0, 0, 3, 81, 1; ...
    4, 20, 6, 0, 55 ...
];

cm_1800821_chan1 = [ ...
    33, 12, 12, 3, 5; ...
    5, 20, 24, 2, 14; ...
    5, 8, 17, 23, 12; ...
    1, 4, 4, 53, 3; ...
    3, 13, 16, 2, 31 ...
];

cm_1800821_chan2 = [ ...
    33, 14, 12, 0, 6; ...
    5, 37, 7, 2, 14; ...
    2, 7, 13, 29, 14; ...
    1, 0, 1, 63, 0; ...
    2, 31, 1, 0, 31 ...
];

cm_1800821_chan3 = [ ...
    42, 19, 2, 0, 2; ...
    9, 27, 14, 2, 13; ...
    5, 3, 10, 36, 11; ...
    2, 0, 3, 58, 2; ...
    3, 0, 22, 6, 34 ...
];

cm_1800807_chan1 = [ ...
    31, 19, 15, 0, 0; ...
    2, 49, 4, 0, 10; ...
    2, 3, 4, 9, 47; ...
    1, 0, 1, 62, 1; ...
    2, 0, 2, 0, 61 ...
];

cm_1800807_chan2 = [ ...
    32, 14, 6, 0, 13; ...
    5, 56, 0, 0, 4; ...
    3, 10, 30, 3, 19; ...
    0, 0, 2, 62, 1; ...
    2, 31, 8, 0, 24 ...
];

cm_1800807_chan3 = [ ...
    58, 3, 0, 0, 4; ...
    6, 44, 0, 0, 15; ...
    6, 23, 22, 7, 7; ...
    0, 0, 26, 39, 0; ...
    1, 1, 0, 0, 63 ...
];


cm_1800749_chan1 = [ ...
    41, 10, 5, 0, 9; ...
    8, 18, 10, 0, 29; ...
    1, 4, 28, 11, 21; ...
    0, 4, 20, 35, 6; ...
    1, 21, 19, 0, 24 ...
];

cm_1800749_chan2 = [ ...
    41, 14, 0, 2, 8; ...
    8, 39, 1, 0, 17; ...
    2, 4, 38, 10, 11; ...
    0, 0, 13, 45, 7; ...
    3, 35, 9, 1, 17 ...
];

cm_1800749_chan3 = [ ...
    47, 9, 0, 3, 6; ...
    12, 22, 1, 0, 30; ...
    1, 9, 38, 5, 12; ...
    2, 0, 11, 49, 3; ...
    2, 23, 8, 0, 32 ...
];


chan1{1} = cm_1800748_chan1;
chan1{2} = cm_1800752_chan1;
chan1{3} = cm_1800870_chan1;
chan1{4} = cm_1800439_chan1;
chan1{5} = cm_1800596_chan1;
chan1{6} = cm_1800604_chan1;
chan1{7} = cm_1800458_chan1;
chan1{8} = cm_1800821_chan1;
chan1{9} = cm_1800807_chan1;
chan1{10} = cm_1800749_chan1;

chan2{1} = cm_1800748_chan2;
chan2{2} = cm_1800752_chan2;
chan2{3} = cm_1800870_chan2;
chan2{4} = cm_1800439_chan2;
chan2{5} = cm_1800596_chan2;
chan2{6} = cm_1800604_chan2;
chan2{7} = cm_1800458_chan2;
chan2{8} = cm_1800821_chan2;
chan2{9} = cm_1800807_chan2;
chan2{10} = cm_1800749_chan2;

chan3{1} = cm_1800748_chan3;
chan3{2} = cm_1800752_chan3;
chan3{3} = cm_1800870_chan3;
chan3{4} = cm_1800439_chan3;
chan3{5} = cm_1800596_chan3;
chan3{6} = cm_1800604_chan3;
chan3{7} = cm_1800458_chan3;
chan3{8} = cm_1800821_chan3;
chan3{9} = cm_1800807_chan3;
chan3{10} = cm_1800749_chan3;


% Channel 1
chan1_total = zeros(5, 5);
for i = 1:length(chan1)
    validatesum(chan1{i}, strcat('Channel 1-', num2str(i)));
    chan1_total = chan1_total + chan1{i};
end
plotcm(chan1_total, 'Confusion Matrix (1 channel - EEG), n=10');
(trace(chan1_total)/sum(sum(chan1_total)))*100

% Channel 2
chan2_total = zeros(5, 5);
for i = 1:length(chan2)
    chan2_total = chan2_total + chan2{i};
end
plotcm(chan2_total, 'Confusion Matrix (2 channels - EEG+EOG), n=10');
(trace(chan2_total)/sum(sum(chan2_total)))*100

% Channel 3
chan3_total = zeros(5, 5);
for i = 1:length(chan3)
    chan3_total = chan3_total + chan3{i};
end
plotcm(chan3_total, 'Confusion Matrix (3 channels - EEG+EOG+EMG), n=10');
(trace(chan3_total)/sum(sum(chan3_total)))*100


function validatesum(data, msg)
    rows_sum = sum(data');
    assert(length(unique(rows_sum)) == 1, "Assertion failed: " + msg);
end

function plotcm(confmat, ttl)
    max_elem = 5;
    totalTarget = sum(confmat, 2);
    perResponse = confmat./repmat(totalTarget, 1, max_elem)*100;
    
    t = cell(max_elem, max_elem);
    for i=1:max_elem
        for j=1:max_elem
            t(i, j) = cellstr([num2str(confmat(i,j)), 10, ...
                num2str(round(perResponse(i,j), 2)), '%']);
        end
    end
    
    figure;
    imagesc(perResponse);
    title(ttl, 'FontSize', 20);

    x = repmat(1:max_elem,max_elem,1);
    y = x';
    text(x(:), y(:), t, 'HorizontalAlignment', 'Center', 'FontSize', 16, ...
        'FontWeight', 'bold');
    ax = gca;
    ax.XTick = 1:max_elem;
    ax.YTick = 1:max_elem;
    ax.XTickLabels = {'W', 'N1', 'N2', 'N3', 'R'};
    ax.YTickLabels = {'W', 'N1', 'N2', 'N3', 'R'};
    ylabel('Target Class');
    xlabel('Output Class');
    ax.XAxisLocation = 'top';
    
    %Define colormap
    c1=[0 0.65 0]; %G
    c2=[1 1 0]; %Y
    c3=[1 0 0]; %R
    n1=20;
    n2=20;
    cmap=[linspace(c1(1),c2(1),n1);linspace(c1(2),c2(2),n1);linspace(c1(3),c2(3),n1)];
    cmap(:,end+1:end+n2)=[linspace(c2(1),c3(1),n2);linspace(c2(2),c3(2),n2);linspace(c2(3),c3(3),n2)];
    colormap(cmap')
    colorbar
    caxis([0 80]);
end


